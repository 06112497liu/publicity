<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bbd.dao.CompareTaskDao">
  <resultMap id="BaseResultMap" type="com.bbd.domain.CompareTask">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="cur_nbxh" jdbcType="VARCHAR" property="curNbxh" />
    <result column="total" jdbcType="INTEGER" property="total" />
    <result column="total_item" jdbcType="INTEGER" property="totalItem" />
    <result column="ex_num" jdbcType="INTEGER" property="exNum" />
    <result column="begin_time" jdbcType="TIMESTAMP" property="beginTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="ex_increased" jdbcType="INTEGER" property="exIncreased" />
    <result column="ex_decrease" jdbcType="INTEGER" property="exDecrease" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type, num, cur_nbxh, total, total_item, ex_num, begin_time, end_time, ex_increased, 
    ex_decrease, gmt_create, gmt_modified
  </sql>
  <select id="selectByExample" parameterType="com.bbd.domain.CompareTaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bbd_pub_cmp_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bbd_pub_cmp_task
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from bbd_pub_cmp_task
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.bbd.domain.CompareTask">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bbd_pub_cmp_task (type, num, cur_nbxh, 
      total, total_item, ex_num, 
      begin_time, end_time, ex_increased, 
      ex_decrease, gmt_create, gmt_modified
      )
    values (#{type,jdbcType=TINYINT}, #{num,jdbcType=INTEGER}, #{curNbxh,jdbcType=VARCHAR}, 
      #{total,jdbcType=INTEGER}, #{totalItem,jdbcType=INTEGER}, #{exNum,jdbcType=INTEGER}, 
      #{beginTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{exIncreased,jdbcType=INTEGER}, 
      #{exDecrease,jdbcType=INTEGER}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bbd.domain.CompareTask">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bbd_pub_cmp_task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="type != null">
        type,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="curNbxh != null">
        cur_nbxh,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="totalItem != null">
        total_item,
      </if>
      <if test="exNum != null">
        ex_num,
      </if>
      <if test="beginTime != null">
        begin_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="exIncreased != null">
        ex_increased,
      </if>
      <if test="exDecrease != null">
        ex_decrease,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="curNbxh != null">
        #{curNbxh,jdbcType=VARCHAR},
      </if>
      <if test="total != null">
        #{total,jdbcType=INTEGER},
      </if>
      <if test="totalItem != null">
        #{totalItem,jdbcType=INTEGER},
      </if>
      <if test="exNum != null">
        #{exNum,jdbcType=INTEGER},
      </if>
      <if test="beginTime != null">
        #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="exIncreased != null">
        #{exIncreased,jdbcType=INTEGER},
      </if>
      <if test="exDecrease != null">
        #{exDecrease,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update bbd_pub_cmp_task
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.curNbxh != null">
        cur_nbxh = #{record.curNbxh,jdbcType=VARCHAR},
      </if>
      <if test="record.total != null">
        total = #{record.total,jdbcType=INTEGER},
      </if>
      <if test="record.totalItem != null">
        total_item = #{record.totalItem,jdbcType=INTEGER},
      </if>
      <if test="record.exNum != null">
        ex_num = #{record.exNum,jdbcType=INTEGER},
      </if>
      <if test="record.beginTime != null">
        begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.exIncreased != null">
        ex_increased = #{record.exIncreased,jdbcType=INTEGER},
      </if>
      <if test="record.exDecrease != null">
        ex_decrease = #{record.exDecrease,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bbd_pub_cmp_task
    set id = #{record.id,jdbcType=BIGINT},
      type = #{record.type,jdbcType=TINYINT},
      num = #{record.num,jdbcType=INTEGER},
      cur_nbxh = #{record.curNbxh,jdbcType=VARCHAR},
      total = #{record.total,jdbcType=INTEGER},
      total_item = #{record.totalItem,jdbcType=INTEGER},
      ex_num = #{record.exNum,jdbcType=INTEGER},
      begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      ex_increased = #{record.exIncreased,jdbcType=INTEGER},
      ex_decrease = #{record.exDecrease,jdbcType=INTEGER},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bbd.domain.CompareTask">
    update bbd_pub_cmp_task
    <set>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="curNbxh != null">
        cur_nbxh = #{curNbxh,jdbcType=VARCHAR},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=INTEGER},
      </if>
      <if test="totalItem != null">
        total_item = #{totalItem,jdbcType=INTEGER},
      </if>
      <if test="exNum != null">
        ex_num = #{exNum,jdbcType=INTEGER},
      </if>
      <if test="beginTime != null">
        begin_time = #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="exIncreased != null">
        ex_increased = #{exIncreased,jdbcType=INTEGER},
      </if>
      <if test="exDecrease != null">
        ex_decrease = #{exDecrease,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bbd.domain.CompareTask">
    update bbd_pub_cmp_task
    set type = #{type,jdbcType=TINYINT},
      num = #{num,jdbcType=INTEGER},
      cur_nbxh = #{curNbxh,jdbcType=VARCHAR},
      total = #{total,jdbcType=INTEGER},
      total_item = #{totalItem,jdbcType=INTEGER},
      ex_num = #{exNum,jdbcType=INTEGER},
      begin_time = #{beginTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      ex_increased = #{exIncreased,jdbcType=INTEGER},
      ex_decrease = #{exDecrease,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithPageBounds" parameterType="com.bbd.domain.CompareTaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bbd_pub_cmp_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>